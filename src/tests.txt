on branch local/test-with-urandom-file.

This branch tests the random number generation by reading from 
the /dev/urandom file.

Keep in mind that the /dev/urandom is more suited for our usecase compared to 
/dev/random since this one can block our read calls if the demande of random byte
is higher then the stream of bytes provided by the system at the time.

TL;DR: use /dev/urandom rather then /dev/random since this last one is blocking.


The idea behind using this file is to read to a local variable a slice of the generated
bytes. At the end, we will, as for rand(), check the uniformity of the values scanned 
from that file.


Results: 
    where
        WORKERS_COUNT = 6
        GENERATIONS_COUNT = 1000 
        ROUNDS_PER_GENERATION = 1000_000
        ARRAY_LEN = 4096 btyes = 1024 ints
        base = WORKERS_COUNT * GENERATIONS_COUNT * ROUNDS_PER_GENERATION / ARRAY_LEN 
    uniformity status ~ 1% 


Observations: 

Do not open and close the file for every number, this will slow the execution trumendensly.

Besides, the results of this test are roughly the same with the rand() and srand() use case 
shown in the local/master branch, maybe that is because rand() read from the urandom file.
(Not sure about that, need to lookup for more)







