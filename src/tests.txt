On branch local/master:

In this branch we use rand() and srand() for our random number generation.

In the main function of every worker, we seed the rand() calls with srand()
by passing the process pid as the seed value. This way we will garentee a 
diffrent seed value for each process, even though they get executed at the
same (roughly) time.


Results:
    where
        WORKERS_COUNT = 6
        GENERATIONS_COUNT = 1000 
        ROUNDS_PER_GENERATION = 1000_000
        ARRAY_LEN = 4096 btyes = 1024 ints
        base = WORKERS_COUNT * GENERATIONS_COUNT * ROUNDS_PER_GENERATION / ARRAY_LEN 
    uniformity status ~ 0.2%

